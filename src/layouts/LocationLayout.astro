---
import Layout from './Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BookingWidget from '../components/BookingWidget.astro';
import { stockImages } from '../lib/stock-images';

export interface Props {
  title: string;
  location: any;
  locationImage?: string;
  locationVideo?: string;
  videoPoster?: string;
}

const { title, location, locationImage, locationVideo, videoPoster } = Astro.props;

// Default dental office images for each location
const defaultImage = location.id === 'st-vital' 
  ? "https://images.unsplash.com/photo-1629909613654-28e377c37b09?w=1920&h=600&fit=crop"
  : "https://images.unsplash.com/photo-1629909615184-74f495363b67?w=1920&h=600&fit=crop";
---

<Layout title={title} description={`Visit Dental Image ${location.name} - ${location.description}`}>
  <Header />
  
  <!-- Location Hero -->
  <section class="relative h-[40vh] min-h-[400px] flex items-center">
    <div class="absolute inset-0">
      {locationVideo ? (
        <>
          <video 
            id="location-video"
            autoplay 
            muted 
            loop 
            playsinline
            class="w-full h-full object-cover"
            poster={videoPoster || defaultImage}
          >
            <source src={locationVideo} type="video/mp4" />
          </video>
          <img 
            id="location-fallback"
            src={locationImage || defaultImage} 
            alt={location.name}
            class="w-full h-full object-cover hidden"
          />
        </>
      ) : (
        <img 
          src={locationImage || defaultImage} 
          alt={location.name}
          class="w-full h-full object-cover"
        />
      )}
      <div class="absolute inset-0 bg-gradient-to-br from-primary-900/80 via-primary-900/70 to-primary-800/60"></div>
    </div>
    
    <div class="container mx-auto px-4 relative z-10 flex flex-col justify-center h-full py-12">
      <nav class="flex items-center gap-2 text-white/80 text-sm mb-6">
        <a href="/" class="hover:text-white transition-colors">Home</a>
        <span>/</span>
        <a href="/locations" class="hover:text-white transition-colors">Locations</a>
        <span>/</span>
        <span class="text-white">{location.name}</span>
      </nav>
      
      <div class="flex-1 flex flex-col justify-center">
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-display font-normal text-white mb-4">
          {location.name}
        </h1>
        <p class="text-xl text-white/90 max-w-3xl">
          {location.description}
        </p>
      </div>
    </div>
  </section>
  
  <!-- Location Actions -->
  <section class="bg-gray-50 py-8">
    <div class="container mx-auto px-4">
      <div class="flex flex-wrap gap-4 justify-center">
        <a href={`tel:${location.phone}`} class="inline-flex items-center gap-2 bg-accent-300 text-primary-900 px-6 py-3 rounded-full font-medium hover:bg-accent-200 transition-colors">
          <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
          </svg>
          {location.phone}
        </a>
        <a href={location.mapUrl} target="_blank" rel="noopener noreferrer" class="inline-flex items-center gap-2 bg-primary-900 text-white px-6 py-3 rounded-full font-medium hover:bg-primary-800 transition-colors">
          <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
          </svg>
          Get Directions
        </a>
      </div>
    </div>
  </section>
  
  <!-- Location Details -->
  <section class="py-16">
    <div class="container mx-auto px-4">
      <div class="grid lg:grid-cols-3 gap-12">
        <!-- Main Content -->
        <div class="lg:col-span-2">
          <slot />
        </div>
        
        <!-- Sidebar Info -->
        <aside class="lg:col-span-1">
          <!-- Hours Card -->
          <div class="bg-white rounded-2xl shadow-lg p-8 mb-8">
            <h3 class="text-2xl font-heading font-semibold text-dental-charcoal mb-6">
              Office Hours
            </h3>
            <div class="space-y-3">
              {Object.entries(location.hours).map(([day, time]) => (
                <div class="flex justify-between py-2 border-b border-gray-100 last:border-0">
                  <span class="text-gray-600">{day}</span>
                  <span class="font-medium text-dental-charcoal">{time}</span>
                </div>
              ))}
            </div>
            <div class="mt-6 p-4 bg-accent-50 rounded-lg">
              <p class="text-sm text-primary-900">
                <strong>Walk-ins Welcome!</strong> We accommodate emergency appointments whenever possible.
              </p>
            </div>
          </div>
          
          <!-- Contact Card -->
          <div class="bg-gradient-to-br from-primary-900 to-primary-800 text-white rounded-2xl p-8">
            <h3 class="text-2xl font-heading font-semibold mb-6">
              Contact Information
            </h3>
            <div class="space-y-4">
              <div>
                <p class="text-white/80 text-sm mb-1">Phone</p>
                <a href={`tel:${location.phone}`} class="text-xl font-semibold hover:text-accent-300 transition-colors">
                  {location.phone}
                </a>
              </div>
              <div>
                <p class="text-white/80 text-sm mb-1">Address</p>
                <address class="not-italic">
                  {location.address}<br />
                  {location.city} {location.postalCode}
                </address>
              </div>
              <a href="#book-appointment" class="block w-full text-center bg-accent-300 text-primary-900 py-3 rounded-lg font-medium hover:bg-accent-200 transition-colors mt-6">
                Book Appointment
              </a>
            </div>
          </div>
        </aside>
      </div>
    </div>
  </section>
  
  <!-- Map Section -->
  <section class="py-16 bg-gray-50">
    <div class="container mx-auto px-4">
      <h2 class="text-3xl md:text-4xl font-heading font-semibold text-center text-dental-charcoal mb-12">
        Find Us Here
      </h2>
      <div class="max-w-4xl mx-auto">
        <div class="bg-white rounded-2xl shadow-lg overflow-hidden">
          <!-- Interactive Map Placeholder -->
          <div class="h-96 bg-gradient-to-br from-gray-100 to-gray-200 relative">
            <div class="absolute inset-0">
              <slot name="map" />
            </div>
          </div>
          
          <!-- Directions Info -->
          <div class="p-8">
            <div class="grid md:grid-cols-2 gap-8">
              <div>
                <h4 class="font-semibold text-lg mb-3">Parking</h4>
                <p class="text-gray-600">
                  <slot name="parking">Free parking available on-site</slot>
                </p>
              </div>
              <div>
                <h4 class="font-semibold text-lg mb-3">Public Transit</h4>
                <p class="text-gray-600">
                  <slot name="transit">Accessible by public transportation</slot>
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  
  <BookingWidget />
  <Footer />

  <script>
    // Handle video loading errors and fallback to image
    document.addEventListener('DOMContentLoaded', function() {
      const video = document.getElementById('location-video');
      const fallback = document.getElementById('location-fallback');
      
      if (video && fallback) {
        // Handle video error
        video.addEventListener('error', function() {
          video.style.display = 'none';
          fallback.classList.remove('hidden');
        });
        
        // Handle video load error (network issues, 403, etc.)
        video.addEventListener('loadstart', function() {
          // Set a timeout to check if video is actually loading
          setTimeout(function() {
            if (video.networkState === video.NETWORK_NO_SOURCE || 
                video.networkState === video.NETWORK_EMPTY || 
                video.readyState === video.HAVE_NOTHING) {
              video.style.display = 'none';
              fallback.classList.remove('hidden');
            }
          }, 5000); // Wait 5 seconds for the video to start loading
        });
        
        // Handle source errors
        const source = video.querySelector('source');
        if (source) {
          source.addEventListener('error', function() {
            video.style.display = 'none';
            fallback.classList.remove('hidden');
          });
        }
      }
    });
  </script>
</Layout>